import telebot
from telebot import types
from dotenv import load_dotenv
import os
from db_service import DatabaseService

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

BOT_TOKEN = os.getenv('BOT_TOKEN')
if not BOT_TOKEN:
    print("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
bot = telebot.TeleBot(BOT_TOKEN)
db = DatabaseService()

def create_main_menu():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("–í–æ–ø—Ä–æ—Å—ã –æ –±–∞–Ω–∞—Ö", callback_data="ban_section"),
        types.InlineKeyboardButton("–ì–∞–π–¥—ã –ø–æ –∏–≥—Ä–µ", callback_data="guide_section")
    )
    markup.add(types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å", callback_data="ask_question"))
    return markup

def create_ban_menu():
    """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –æ –±–∞–Ω–∞—Ö"""
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("–ü–æ—á–µ–º—É –º–µ–Ω—è –∑–∞–±–∞–Ω–∏–ª–∏?", callback_data="why_banned"),
        types.InlineKeyboardButton("–ö—É–¥–∞ –¥–µ–ª–∏—Å—å –º–æ–∏ –¥–µ–Ω—å–≥–∏?", callback_data="money_after_ban"),
        types.InlineKeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ —á–∏—Ç—ã?", callback_data="what_are_cheats"),
        types.InlineKeyboardButton("–ß—Ç–æ —Ç–∞–∫–æ–µ –±–∞–Ω?", callback_data="what_is_ban"),
        types.InlineKeyboardButton("–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª—è–º–∏?", callback_data="talk_to_creators")
    )
    markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚Ü©", callback_data="main_menu"))
    return markup

def create_guide_menu():
    """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –≥–∞–π–¥–æ–≤"""
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤", callback_data="item_guide"),
        types.InlineKeyboardButton("–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ –∏–≥—Ä—É?", callback_data="complete_game"),
        types.InlineKeyboardButton("–ö–∞–∫–∏–µ –µ—Å—Ç—å –ø—Ä–∏–∫–æ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞?", callback_data="servers")
    )
    markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚Ü©", callback_data="main_menu"))
    return markup

def create_server_menu():
    """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –≥–∞–π–¥–æ–≤"""
    markup = types.InlineKeyboardMarkup(row_width=2)
    markup.add(
        types.InlineKeyboardButton("Complex Gaming", callback_data="complex_gaming"),
        types.InlineKeyboardButton("MineFlake", callback_data="mineflake"),
        types.InlineKeyboardButton("OPLegends", callback_data="oplegends"),
        types.InlineKeyboardButton("BlossomCraft", callback_data="blossomcraft"),
        types.InlineKeyboardButton("Breeze SMP", callback_data="breeze_smp"),
        types.InlineKeyboardButton("ManaCube", callback_data="manacube"),
        types.InlineKeyboardButton("MysticMC", callback_data="mysticmc"),
        types.InlineKeyboardButton("MineSeed SMP", callback_data="mineseed_smp"),
        types.InlineKeyboardButton("EnchantedMC", callback_data="enchantedmc"),
    )
    markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–∞–π–¥‚Ü©", callback_data="guide_section"))
    return markup

def create_choosen_server_menu():
    """–°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –≥–∞–π–¥–æ–≤"""
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚Ü©", callback_data="main_menu"))
    return markup

def create_admin_menu():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω-–º–µ–Ω—é"""
    markup = types.InlineKeyboardMarkup(row_width=1)
    markup.add(
        types.InlineKeyboardButton("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–ø—Ä–æ—Å—ã", callback_data="admin_view_questions"),
        types.InlineKeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ FAQ", callback_data="admin_stats")
    )
    markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é‚Ü©", callback_data="main_menu"))
    return markup

@bot.message_handler(commands=['start'])
def handle_start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    welcome_text = f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n\n"
    welcome_text += "–Ø –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Minecraft —Å–µ—Ä–≤–µ—Ä–∞. –í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:\n\n"
    welcome_text += "‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–Ω–∞—Ö –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏—è—Ö\n"
    welcome_text += "‚Ä¢ –ì–∞–π–¥—ã –ø–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é –∏–≥—Ä—ã\n"
    welcome_text += "‚Ä¢ –ó–∞–¥–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"
    
    bot.send_message(message.chat.id, welcome_text, reply_markup=create_main_menu())

@bot.message_handler(commands=['help'])
def handle_help(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = "–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n\n"
    help_text += "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
    help_text += "‚Ä¢ /start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
    help_text += "‚Ä¢ /help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
    help_text += "‚Ä¢ /question - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n"
    help_text += "‚Ä¢ /admin - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\n\n"
    help_text += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!"
    
    bot.send_message(message.chat.id, help_text, reply_markup=create_main_menu())

@bot.message_handler(commands=['question'])
def handle_question_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /question –¥–ª—è –∑–∞–¥–∞–≤–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞"""
    text = "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n\n"
    text += "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ–ª—É—á–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç—è—Ç –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.\n\n"
    text += "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:\n"
    text += "‚Ä¢ –í–æ–ø—Ä–æ—Å —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω –ø–æ–Ω—è—Ç–Ω–æ\n"
    text += "‚Ä¢ –í—ã —É–∫–∞–∑–∞–ª–∏ –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n"
    text += "‚Ä¢ –í–æ–ø—Ä–æ—Å–∞ –Ω–µ—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ FAQ"
    
    bot.send_message(message.chat.id, text, reply_markup=create_main_menu())


@bot.message_handler(commands=['admin'])
def handle_admin_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    if db.is_admin(message.from_user.id):
        bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—åüë®‚Äçüîß", reply_markup=create_admin_menu())
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫"""
    try:
        if call.data == "main_menu":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:",
                reply_markup=create_main_menu()
            )
            
        elif call.data == "ban_section":
            db.log_faq_usage("ban_section")
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–†–∞–∑–¥–µ–ª: –í–æ–ø—Ä–æ—Å—ã –æ –±–∞–Ω–∞—Ö\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:",
                reply_markup=create_ban_menu()
            )
            
        elif call.data == "guide_section":
            db.log_faq_usage("guide_section")
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–†–∞–∑–¥–µ–ª: –ì–∞–π–¥—ã –ø–æ –∏–≥—Ä–µ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≥–∞–π–¥:",
                reply_markup=create_guide_menu()
            )

        elif call.data == "complex_gaming":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: bmc.mc-complex.com",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "mineflake":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: best.mineflake.net",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "oplegends":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: best.oplegends.com",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "blossomcraft":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: best.blossomcraft.org",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "breeze_smp":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: best.breezesmp.com",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "manacube":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: join.manacube.com",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "mysticmc":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: best.mysticmc.co",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "mineseed_smp":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: bms.mineseed.org",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "enchantedmc":
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–í–æ—Ç –∞–π–ø–∏: best.enchantedmc.net",
                reply_markup=create_choosen_server_menu()
            )

        elif call.data == "servers":
            db.log_faq_usage("server_section")
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–†–∞–∑–¥–µ–ª: –í–æ—Ç –µ—Å—Ç—å —Ä–∞–∑–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –∏—Ö –∞–π–ø–∏:",
                reply_markup=create_server_menu()
            )

        elif call.data == "why_banned":
            db.log_faq_usage("ban_section", "why_banned")
            answer = "–ü–æ—á–µ–º—É –º–µ–Ω—è –∑–∞–±–∞–Ω–∏–ª–∏?\n\n"
            answer += "–ù–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ, –≤—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –æ–¥–Ω–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—Ä–∏—á–∏–Ω:\n\n"
            answer += "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–∏—Ç–æ–≤, –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n"
            answer += "‚Ä¢ –û—Ç–∫–∞–∑ –æ—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º\n"
            answer += "‚Ä¢ –ù–µ—É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º –∏–ª–∏ –∏–≥—Ä–æ–∫–∞–º\n\n"
            answer += "–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É—é—Ç—Å—è. "
            answer += "–ï—Å–ª–∏ –≤—ã –Ω–µ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π, —É –Ω–∞—Å –µ—Å—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.\n\n"
            answer += "–ï—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –∂–¥–∞—Ç—å –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ –±–∞–Ω–∞, –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Ä–∞–∑–±–∞–Ω."
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="ban_section"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=answer,
                reply_markup=markup
            )
            
        elif call.data == "money_after_ban":
            db.log_faq_usage("ban_section", "money_after_ban")
            answer = "–ö—É–¥–∞ –¥–µ–ª–∏—Å—å –º–æ–∏ –¥–µ–Ω—å–≥–∏ –ø–æ—Å–ª–µ –±–∞–Ω–∞?\n\n"
            answer += "–í–∞—à–∏ –¥–µ–Ω—å–≥–∏ –Ω–∏–∫—É–¥–∞ –Ω–µ –¥–µ–ª–∏—Å—å!\n\n"
            answer += "‚Ä¢ –í—Å–µ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –æ—Å—Ç–∞—é—Ç—Å—è –≤ –∞–∫–∫–∞—É–Ω—Ç–µ, —Å –∫–æ—Ç–æ—Ä—ã–º –≤—ã –∏–≥—Ä–∞–ª–∏ –¥–æ –±–∞–Ω–∞\n"
            answer += "‚Ä¢ –ú—ã –Ω–µ –∏–º–µ–µ–º –ø—Ä–∞–≤–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–µ–Ω—å–≥–∏ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞\n\n"
            answer += "–ü—Ä–æ—Å—Ç–∞—è –∞–Ω–∞–ª–æ–≥–∏—è:\n"
            answer += "–í—ã –∫—É–ø–∏–ª–∏ —Ä—É–±–∞—à–∫—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –æ–Ω–∞ –≤–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å, –∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏, –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—è —Ä—É–±–∞—à–∫—É. –¢–∞–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.\n\n"
            answer += "–ü–æ–∫—É–ø–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É."
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="ban_section"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=answer,
                reply_markup=markup
            )
            
        elif call.data == "what_are_cheats":
            db.log_faq_usage("ban_section", "what_are_cheats")
            answer = "–ß—Ç–æ —Ç–∞–∫–æ–µ —á–∏—Ç—ã?\n\n"
            answer += "–ß–∏—Ç—ã ‚Äî —ç—Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–∞—é—Ç –Ω–µ—á–µ—Å—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤ –∏–≥—Ä–µ.\n\n"
            answer += "–ü—Ä–∏–º–µ—Ä—ã —á–∏—Ç–æ–≤ –≤ Minecraft:\n"
            answer += "‚Ä¢ X-Ray ‚Äî –≤–∏–¥–µ—Ç—å —Ä—É–¥—ã —Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã\n"

            answer += "‚Ä¢ Speed hack ‚Äî —É–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è\n"
            answer += "‚Ä¢ Fly ‚Äî –ø–æ–ª—ë—Ç –≤ —Ä–µ–∂–∏–º–µ –≤—ã–∂–∏–≤–∞–Ω–∏—è\n"
            answer += "‚Ä¢ KillAura ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞ –∏–≥—Ä–æ–∫–æ–≤\n"
            answer += "‚Ä¢ AutoClicker ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–ª–∏–∫–∏\n\n"
            answer += "–í —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏ —ç—Ç–æ –∫–∞–∫:\n"
            answer += "‚Ä¢ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –¥–µ–Ω—å–≥–∏\n"
            answer += "‚Ä¢ –£–º–µ–Ω–∏–µ –ª–µ—Ç–∞—Ç—å\n"
            answer += "‚Ä¢ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è\n\n"
            answer += "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–∏—Ç–æ–≤ –Ω–∞—Ä—É—à–∞–µ—Ç —á–µ—Å—Ç–Ω–æ—Å—Ç—å –∏–≥—Ä—ã –∏ –ø–æ—Ä—Ç–∏—Ç –æ–ø—ã—Ç –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–∞–º."
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="ban_section"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=answer,
                reply_markup=markup
            )
            
        elif call.data == "what_is_ban":
            db.log_faq_usage("ban_section", "what_is_ban")
            answer = "–ß—Ç–æ —Ç–∞–∫–æ–µ –±–∞–Ω?\n\n"
            answer += "–ë–∞–Ω ‚Äî —ç—Ç–æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∏–ª–∏ –Ω–∞–≤—Å–µ–≥–¥–∞.\n\n"
            answer += "–ß—Ç–æ —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç:\n"
            answer += "‚Ä¢ –ó–∞–ø—Ä–µ—Ç –≤—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n"
            answer += "‚Ä¢ –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä–∞—Ç—å —Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n"
            answer += "‚Ä¢ –ü–æ—Ç–µ—Ä—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–≥—Ä–æ–≤–æ–º—É –ø—Ä–æ–≥—Ä–µ—Å—Å—É –Ω–∞ –≤—Ä–µ–º—è –±–∞–Ω–∞\n\n"
            answer += "–¢–∏–ø—ã –±–∞–Ω–æ–≤:\n"
            answer += "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–π ‚Äî –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —Å—Ä–æ–∫ (–¥–Ω–∏, –Ω–µ–¥–µ–ª–∏, –º–µ—Å—è—Ü—ã)\n"
            answer += "‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π ‚Äî –Ω–∞–≤—Å–µ–≥–¥–∞ (–∑–∞ —Å–µ—Ä—å—ë–∑–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è)\n\n"
            answer += "–ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏: —ç—Ç–æ –∫–∞–∫ –∑–∞–ø—Ä–µ—Ç –≤—Ö–æ–¥–∞ –≤ –º–∞–≥–∞–∑–∏–Ω –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª."
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="ban_section"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=answer,
                reply_markup=markup
            )
            
        elif call.data == "talk_to_creators":
            db.log_faq_usage("ban_section", "talk_to_creators")
            answer = "–ú–æ–∂–Ω–æ –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª—è–º–∏?\n\n"
            answer += "–ö–æ–Ω–µ—á–Ω–æ! –ù–æ —É—á—Ç–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–º–µ–Ω—Ç–æ–≤:\n\n"
            answer += "–°–æ–∑–¥–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–Ω—è—Ç—ã:\n"
            answer += "‚Ä¢ –£ –Ω–∏—Ö –º–Ω–æ–≥–æ –¥–µ–ª –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Å–µ—Ä–≤–µ—Ä–æ–º\n"
            answer += "‚Ä¢ –û–Ω–∏ –Ω–µ –≤—Å–µ–≥–¥–∞ –æ–Ω–ª–∞–π–Ω\n"
            answer += "‚Ä¢ –ú–æ–≥—É—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç—å —Å—Ä–∞–∑—É\n\n"
            answer += "–õ—É—á—à–∏–µ —Å–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏:\n"
            answer += "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å' –≤ —ç—Ç–æ–º –±–æ—Ç–µ\n"
            answer += "‚Ä¢ –ü–∏—à–∏—Ç–µ, –∫–æ–≥–¥–∞ –≤–∏–¥–∏—Ç–µ –∏—Ö –æ–Ω–ª–∞–π–Ω\n"
            answer += "‚Ä¢ –ë—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã –∏ –≤–µ–∂–ª–∏–≤—ã\n\n"
            answer += "–°–æ–≤–µ—Ç: —Å–Ω–∞—á–∞–ª–∞ –∏–∑—É—á–∏—Ç–µ FAQ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à –≤–æ–ø—Ä–æ—Å —É–∂–µ –∏–º–µ–µ—Ç –æ—Ç–≤–µ—Ç!"
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="ban_section"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=answer,
                reply_markup=markup
            )
            
        elif call.data == "item_guide":
            db.log_faq_usage("guide_section", "item_guide")
            answer = "–ì–∞–π–¥ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –ø—Ä–µ–¥–º–µ—Ç–æ–≤\n\n"
            answer += "–ü–æ–ª—É—á–µ–Ω–∏–µ –û–∫–æ –ö—Ä–∞—è (Eye of Ender):\n\n"
            answer += "1. –°–æ–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n"
            answer += "   ‚Ä¢ –ñ–µ–º—á—É–≥ –ö—Ä–∞—è ‚Äî —É–±–∏–≤–∞–π—Ç–µ –≠–Ω–¥–µ—Ä–º–µ–Ω–æ–≤\n"
            answer += "   ‚Ä¢ –°—Ç–µ—Ä–∂–µ–Ω—å –û–≥–Ω—è ‚Äî —É–±–∏–≤–∞–π—Ç–µ –ò—Ñ—Ä–∏—Ç–æ–≤ –≤ –ù–µ–∑–µ—Ä–µ\n\n"
            answer += "2. –ö—Ä–∞—Ñ—Ç:\n"
            answer += "   ‚Ä¢ –ü–æ–º–µ—Å—Ç–∏—Ç–µ –ñ–µ–º—á—É–≥ –ö—Ä–∞—è –∏ –°—Ç–µ—Ä–∂–µ–Ω—å –û–≥–Ω—è –≤ –≤–µ—Ä—Å—Ç–∞–∫\n"
            answer += "   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –û–∫–æ –ö—Ä–∞—è\n\n"
            answer += "–î–ª—è –ø–æ–∏—Å–∫–∞ –∫—Ä–µ–ø–æ—Å—Ç–∏ –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –æ–∫–æ–ª–æ 12-15 –û—á–µ–π –ö—Ä–∞—è.\n\n"
            answer += "–°–æ–≤–µ—Ç: –ù–æ—Å–∏—Ç–µ —Å —Å–æ–±–æ–π —Ç—ã–∫–≤—É –Ω–∞ –≥–æ–ª–æ–≤–µ –ø—Ä–∏ –æ—Ö–æ—Ç–µ –Ω–∞ –≠–Ω–¥–µ—Ä–º–µ–Ω–æ–≤ ‚Äî –æ–Ω–∏ –Ω–µ –±—É–¥—É—Ç –∞–≥—Ä–∏—Ç—å—Å—è!"

            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="guide_section"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=answer,
                reply_markup=markup
            )
            
        elif call.data == "complete_game":
            db.log_faq_usage("guide_section", "complete_game")
            answer = "–ö–∞–∫ –ø—Ä–æ–π—Ç–∏ Minecraft?\n\n"
            answer += "–ü–æ—à–∞–≥–æ–≤—ã–π –≥–∞–π–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:\n\n"
            answer += "1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞:\n"
            answer += "   ‚Ä¢ –°–∫—Ä–∞—Ñ—Ç–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: –∫–∏—Ä–∫–∞, –º–µ—á, —Ç–æ–ø–æ—Ä\n"
            answer += "   ‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–æ–∑—å–º–∏—Ç–µ –≤–µ–¥—Ä–æ —Å –≤–æ–¥–æ–π!\n\n"
            answer += "2. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –ù–µ–∑–µ—Ä:\n"
            answer += "   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ —Ä–∞–∑—Ä—É—à–µ–Ω–Ω—ã–π –ø–æ—Ä—Ç–∞–ª –∏–ª–∏ –ª–∞–≤–æ–≤–æ–µ –æ–∑–µ—Ä–æ\n"
            answer += "   ‚Ä¢ –ü–æ—Å—Ç—Ä–æ–π—Ç–µ –ø–æ—Ä—Ç–∞–ª –≤ –ù–µ–∑–µ—Ä –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ\n"
            answer += "   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: —Å–¥–µ–ª–∞–π—Ç–µ –∑–æ–ª–æ—Ç—ã–µ –±–æ—Ç–∏–Ω–∫–∏\n\n"
            answer += "3. –°–±–æ—Ä —Ä–µ—Å—É—Ä—Å–æ–≤ –≤ –ù–µ–∑–µ—Ä–µ:\n"
            answer += "   ‚Ä¢ –£–±–∏–≤–∞–π—Ç–µ –≠–Ω–¥–µ—Ä–º–µ–Ω–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ñ–µ–º—á—É–≥–∞ –ö—Ä–∞—è\n"
            answer += "   ‚Ä¢ –£–±–∏–≤–∞–π—Ç–µ –ò—Ñ—Ä–∏—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –°—Ç–µ—Ä–∂–Ω—è –û–≥–Ω—è\n"
            answer += "   ‚Ä¢ –°–∫—Ä–∞—Ñ—Ç–∏—Ç–µ 12-15 –û—á–µ–π –ö—Ä–∞—è\n\n"
            answer += "4. –ü–æ–∏—Å–∫ –∫—Ä–µ–ø–æ—Å—Ç–∏:\n"
            answer += "   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –û–∫–æ –ö—Ä–∞—è ‚Äî –æ–Ω–æ –ø–æ–ª–µ—Ç–∏—Ç –∫ –±–ª–∏–∂–∞–π—à–µ–π –∫—Ä–µ–ø–æ—Å—Ç–∏\n"
            answer += "   ‚Ä¢ –°–ª–µ–¥—É–π—Ç–µ –∑–∞ –Ω–∏–º, –∫–æ–ø–∞–π—Ç–µ –≤–Ω–∏–∑ –µ—Å–ª–∏ –æ–Ω–æ —É–ø–∞–ª–æ\n"
            answer += "   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –∫–∞–º–µ–Ω–Ω—ã–π –ª–∞–±–∏—Ä–∏–Ω—Ç\n\n"
            answer += "5. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ—Ä—Ç–∞–ª–∞ –ö—Ä–∞—è:\n"
            answer += "   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É —Å –ø–æ—Ä—Ç–∞–ª–æ–º –ö—Ä–∞—è\n"
            answer += "   ‚Ä¢ –í—Å—Ç–∞–≤—å—Ç–µ –û—á–∏ –ö—Ä–∞—è –≤–æ –≤—Å–µ –±–ª–æ–∫–∏ –ø–æ—Ä—Ç–∞–ª–∞\n"
            answer += "   ‚Ä¢ –ü—Ä—ã–≥–Ω–∏—Ç–µ –≤ –ø–æ—Ä—Ç–∞–ª\n\n"
            answer += "6. –ë–æ–π —Å –î—Ä–∞–∫–æ–Ω–æ–º:\n"
            answer += "   ‚Ä¢ –°–Ω–∞—á–∞–ª–∞ —É–Ω–∏—á—Ç–æ–∂—å—Ç–µ –≤—Å–µ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã –ö—Ä–∞—è –Ω–∞ –±–∞—à–Ω—è—Ö\n"
            answer += "   ‚Ä¢ –ó–∞—Ç–µ–º —Å—Ä–∞–∂–∞–π—Ç–µ—Å—å —Å –î—Ä–∞–∫–æ–Ω–æ–º –ö—Ä–∞—è\n"
            answer += "   ‚Ä¢ –ü–æ—Å–ª–µ –ø–æ–±–µ–¥—ã –≤ —Ü–µ–Ω—Ç—Ä–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Ä—Ç–∞–ª\n\n"
            answer += "7. –§–∏–Ω–∞–ª:\n"
            answer += "   ‚Ä¢ –ü—Ä—ã–≥–Ω–∏—Ç–µ –≤ –ø–æ—Ä—Ç–∞–ª –≤ —Ü–µ–Ω—Ç—Ä–µ\n"
            answer += "   ‚Ä¢ –ù–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å —Ç–∏—Ç—Ä–∞–º–∏ ‚Äî –≤—ã –ø—Ä–æ—à–ª–∏ Minecraft!\n\n"
            answer += "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ–º –∏–≥—Ä—ã!"
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="guide_section"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=answer,
                reply_markup=markup
            )
            
        elif call.data == "ask_question":
            text = "–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å\n\n"
            text += "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. "
            text += "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –ø–æ–ª—É—á–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç—è—Ç –≤–∞–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.\n\n"
            text += "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:\n"
            text += "‚Ä¢ –í–æ–ø—Ä–æ—Å —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω –ø–æ–Ω—è—Ç–Ω–æ\n"
            text += "‚Ä¢ –í—ã —É–∫–∞–∑–∞–ª–∏ –≤—Å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é\n"
            text += "‚Ä¢ –í–æ–ø—Ä–æ—Å–∞ –Ω–µ—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ FAQ"
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞‚õî", callback_data="main_menu"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=text,
                reply_markup=markup
            )
            
        # –ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã
        elif call.data.startswith("admin_") and db.is_admin(call.from_user.id):
            handle_admin_callbacks(call)
            
        elif call.data == "admin_menu" and db.is_admin(call.from_user.id):
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—åüë®‚Äçüîß",
                reply_markup=create_admin_menu()
            )
            
    except Exception as e:

        bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞(¬¨_¬¨ ), –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞üîÑ")

def handle_admin_callbacks(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö callback'–æ–≤"""
    if call.data == "admin_stats":
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = db.get_faq_stats()
        pending_count = len(db.get_pending_questions())
        
        text = f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n\n"
        text += f"–ù–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤: {pending_count}\n\n"
        
        if stats:
            text += "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã FAQ:\n"
            for section, question_type, clicks, last_accessed in stats[:10]:
                display_name = question_type or section
                text += f"‚Ä¢ {display_name}: {clicks} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n"
        else:
            text += "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–∫–∞ –Ω–µ—Ç¬Ø\_(„ÉÑ)_/¬Ø"
        
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="admin_menu"))
        
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=text,
            reply_markup=markup
        )
        
    elif call.data == "admin_view_questions":
        questions = db.get_pending_questions()
        if not questions:
            bot.answer_callback_query(call.id, "–ù–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç <(Ôø£ cÔø£)y‚ñÇŒæ")
            return
            
        text = "–ù–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
        markup = types.InlineKeyboardMarkup()
        
        for q in questions[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 5
            question_text = q[3][:50] + "..." if len(q[3]) > 50 else q[3]
            text += f"ID: {q[0]} | @{q[2] or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
            text += f"–í–æ–ø—Ä–æ—Å: {question_text}\n"
            text += f"–î–∞—Ç–∞: {q[4]}\n\n"
            
            markup.add(types.InlineKeyboardButton(
                f"–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ #{q[0]}", 
                callback_data=f"admin_answer_{q[0]}"
            ))
        
        markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥‚Ü©", callback_data="admin_menu"))
        
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=text,
            reply_markup=markup
        )
        
    elif call.data.startswith("admin_answer_"):
        question_id = int(call.data.split("_")[-1])
        question = db.get_question_by_id(question_id)
        
        if question:
            text = f"–í–æ–ø—Ä–æ—Å #{question[0]}\n\n"
            text += f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{question[2] or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
            text += f"–í—Ä–µ–º—è: {question[4]}\n"
            text += f"–í–æ–ø—Ä–æ—Å: {question[3]}\n\n"
            text += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /answer {question_id} {–≤–∞—à_–æ—Ç–≤–µ—Ç} –¥–ª—è –æ—Ç–≤–µ—Ç–∞"
            
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥ –∫ –≤–æ–ø—Ä–æ—Å–∞–º‚Ü©", callback_data="admin_view_questions"))
            
            bot.edit_message_text(
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                text=text,
                reply_markup=markup
            )


@bot.message_handler(commands=['answer'])
def handle_answer_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /answer –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å"""
    if not db.is_admin(message.from_user.id):
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞(._‚äô)Ôºü.")
        return
        
    try:
        # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É /answer question_id –æ—Ç–≤–µ—Ç
        parts = message.text.split(' ', 2)
        if len(parts) < 3:
            bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /answer {–Ω–æ–º–µ—Ä_–≤–æ–ø—Ä–æ—Å–∞} {–≤–∞—à_–æ—Ç–≤–µ—Ç}")
            return
            
        question_id = int(parts[1])
        admin_response = parts[2]
        
        question = db.get_question_by_id(question_id)
        if not question:
            bot.send_message(message.chat.id, f"–í–æ–ø—Ä–æ—Å #{question_id} –Ω–µ –Ω–∞–π–¥–µ–Ω.¬Ø\_(„ÉÑ)_/¬Ø")
            return
            
        if db.answer_question(question_id, message.from_user.id, admin_response):
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(
                question[1],  # user_id –∏–∑ –≤–æ–ø—Ä–æ—Å–∞
                f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å (‚òûÔæü„ÉÆÔæü)‚òû#{question_id}‚òú(Ôæü„ÉÆÔæü‚òú):\n\n"
                f"–í–∞—à –≤–æ–ø—Ä–æ—Å: {question[3]}\n\n"
                f"–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {admin_response}"
            )
            
            bot.send_message(
                message.chat.id,
                f"–û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å #{question_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!‚òú(Ôæü„ÉÆÔæü‚òú)",
                reply_markup=create_admin_menu()
            )
        else:
            bot.send_message(
                message.chat.id,
                "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞(o_ _)Ôæâ",
                reply_markup=create_admin_menu()
            )
            
    except (ValueError, IndexError):
        bot.send_message(message.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã‚ùå. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /answer {–Ω–æ–º–µ—Ä_–≤–æ–ø—Ä–æ—Å–∞} {–≤–∞—à_–æ—Ç–≤–µ—Ç}")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∫–æ–º–∞–Ω–¥–∞ –ª–∏ —ç—Ç–æ
    if message.text.startswith('/'):
        bot.send_message(
            message.chat.id,
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞„Å§Ôπè‚äÇ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help ‚òú(Ôæü„ÉÆÔæü‚òú) –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.",
            reply_markup=create_main_menu()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    question_id = db.add_question(
        message.from_user.id, 
        message.from_user.username, 
        message.text
    )
    
    if question_id:
        bot.send_message(
            message.chat.id,
            f"–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º!ÔΩû(Ôø£‚ñΩÔø£ÔΩû)\n\n"
            f"–ù–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞: #{question_id}\n"
            f"–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
            reply_markup=create_main_menu()
        )
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        notify_admins_about_question(question_id, message.from_user.username, message.text)
        
    else:
        bot.send_message(
            message.chat.id,
            "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.üîÑ",
            reply_markup=create_main_menu()
        )

def notify_admins_about_question(question_id, username, question_text):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –Ω–æ–≤–æ–º –≤–æ–ø—Ä–æ—Å–µ"""
    admins = db.get_all_admins()
    notification_text = (
        f"–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å #{question_id}\n\n"
        f"–û—Ç: @{username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n"
        f"–í–æ–ø—Ä–æ—Å: {question_text[:200]}...\n\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /admin –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
    )
    
    for admin_id, admin_username in admins:
        try:
            bot.send_message(admin_id, notification_text)
        except Exception as e:
            pass

bot.infinity_polling()